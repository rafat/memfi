// src/app/configs/index.ts
"use client";

import { http, createConfig } from "wagmi";
import { blockdagPrimordial } from "@/chains";   // your local chain object
import { connectorsForWallets } from '@rainbow-me/rainbowkit';
import {
  injectedWallet,
  metaMaskWallet,
  walletConnectWallet,
  coinbaseWallet,
} from '@rainbow-me/rainbowkit/wallets';


const projectId = process.env.NEXT_PUBLIC_PROJECT_ID;

if (!projectId) {
  throw new Error("NEXT_PUBLIC_PROJECT_ID is not defined in your .env.local file. Please get a Project ID from WalletConnect Cloud.");
}

export const metadata = {
  name: "MemFi",
  description: "AI Memory DeFi on BlockDAG",
  url: "https://memfi.app",
  icons: ["https://avatars.githubusercontent.com/u/37784886"],
};

const connectors = connectorsForWallets(
  [
    {
      groupName: 'Suggested',
      wallets: [
        metaMaskWallet,
        injectedWallet,
        walletConnectWallet,
        coinbaseWallet,
      ],
    },
  ],
  {
    appName: metadata.name,
    projectId: projectId, // WalletConnect Cloud Project ID
  }
);

export const config = createConfig({
  chains: [blockdagPrimordial],
  connectors, // Use the rich connectors generated by RainbowKit
  transports: {
    [blockdagPrimordial.id]: http(process.env.NEXT_PUBLIC_BLOCKDAG_TESTNET_RPC), // Simplified transport
  },
  ssr: true,
});